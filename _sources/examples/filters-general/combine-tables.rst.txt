
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/filters-general/combine-tables.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_filters-general_combine-tables.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_filters-general_combine-tables.py:


Combine Tables
~~~~~~~~~~~~~~

This example will demonstrate how to to merge to `vtkTable` objects with the
same number of rows into a single `vtkTable`.

This example demos :class:`PVGeo.filters.CombineTables`

Please note that this example only works on version of PyVista>=0.22.0

.. GENERATED FROM PYTHON SOURCE LINES 12-17

.. code-block:: Python

    import numpy as np
    import pyvista as pv

    from PVGeo.filters import CombineTables








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Create some input tables

.. GENERATED FROM PYTHON SOURCE LINES 19-33

.. code-block:: Python

    t0 = pv.Table()
    t1 = pv.Table()

    # Populate the tables
    n = 100
    titles = ("Array 0", "Array 1", "Array 2")
    arr0 = np.random.random(n)  # Table 0
    arr1 = np.random.random(n)  # Table 0
    t0[titles[0]] = arr0
    t0[titles[1]] = arr1
    arr2 = np.random.random(n)  # Table 1
    t1[titles[2]] = arr2
    arrs = [arr0, arr1, arr2]








.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: Python

    t0






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table style='width: 100%;'>
    <tr><th>Table</th><th>Information</th></tr>
    <tr><td>N Rows</td><td>100</td></tr>
    <tr><td>N Arrays</td><td>2</td></tr>
    </table>

    </td><td>
    <table style='width: 100%;'>
    <tr><th>Name</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td>Array 0</td><td>float64</td><td>1</td><td>1.120e-03</td><td>9.705e-01</td></tr>
    <tr><td>Array 1</td><td>float64</td><td>1</td><td>4.163e-04</td><td>9.998e-01</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: Python

    t1






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table style='width: 100%;'>
    <tr><th>Table</th><th>Information</th></tr>
    <tr><td>N Rows</td><td>100</td></tr>
    <tr><td>N Arrays</td><td>1</td></tr>
    </table>

    </td><td>
    <table style='width: 100%;'>
    <tr><th>Name</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td>Array 2</td><td>float64</td><td>1</td><td>1.117e-02</td><td>9.973e-01</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: Python


    # Now use the `CombineTables` filter:
    output = CombineTables().apply(t0, t1)
    output






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table style='width: 100%;'>
    <tr><th>Table</th><th>Information</th></tr>
    <tr><td>N Rows</td><td>100</td></tr>
    <tr><td>N Arrays</td><td>3</td></tr>
    </table>

    </td><td>
    <table style='width: 100%;'>
    <tr><th>Name</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td>Array 0</td><td>float64</td><td>1</td><td>1.120e-03</td><td>9.705e-01</td></tr>
    <tr><td>Array 1</td><td>float64</td><td>1</td><td>4.163e-04</td><td>9.998e-01</td></tr>
    <tr><td>Array 2</td><td>float64</td><td>1</td><td>1.117e-02</td><td>9.973e-01</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 46-51

.. code-block:: Python


    # Here I verify the result
    for i in range(len(titles)):
        arr = output[titles[i]]
        assert np.allclose(arr, arrs[i], rtol=0.0001)








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.004 seconds)


.. _sphx_glr_download_examples_filters-general_combine-tables.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: combine-tables.ipynb <combine-tables.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: combine-tables.py <combine-tables.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
